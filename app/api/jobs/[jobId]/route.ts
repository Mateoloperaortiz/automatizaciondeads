import { NextResponse } from \'next/server\';\nimport { db } from \'@/lib/db/drizzle\';\nimport { jobAds } from \'@/lib/db/schema\';\nimport { getTeamForUser } from \'@/lib/db/queries\';\nimport { eq, and } from \'drizzle-orm\';\n\nexport async function GET(\n  request: Request, // Standard Request object for context\n  { params }: { params: { jobId: string } }\n) {\n  try {\n    const team = await getTeamForUser();\n    if (!team) {\n      return NextResponse.json(\n        { error: \'User not authenticated or not associated with a team\' },\n        { status: 401 }\n      );\n    }\n\n    const jobId = parseInt(params.jobId, 10);\n    if (isNaN(jobId)) {\n      return NextResponse.json({ error: \'Invalid Job ID\' }, { status: 400 });\n    }\n\n    const ad = await db.query.jobAds.findFirst({\n      where: and(eq(jobAds.id, jobId), eq(jobAds.teamId, team.id)),\n    });\n\n    if (!ad) {\n      return NextResponse.json({ error: \'Job ad not found or access denied\' }, { status: 404 });\n    }\n\n    return NextResponse.json(ad);\n  } catch (error) {\n    console.error(`Error fetching job ad ${params.jobId}:`, error);\n    return NextResponse.json(\n      { error: \'Failed to fetch job ad\' },\n      { status: 500 }\n    );\n  }\n}\n 